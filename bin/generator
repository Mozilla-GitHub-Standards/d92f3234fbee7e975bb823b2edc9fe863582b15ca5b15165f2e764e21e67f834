var http = require('http');

var express = require('express');
var toobusy = require('../lib/busy_middleware.js');

var ApkGenerator = require('../lib/apk_generator').ApkGenerator;
var log = require('../lib/logging').logger;
var metrics = require('../lib/metrics');
var withConfig = require('../lib/config');

withConfig(function(config) {
    var generator = new ApkGenerator(config.buildDir,
        config.keysDir,
        config.force,
        config.debug);

    var app = express();

    // Send 5xx if server is overloaded
    app.use(toobusy);

    app.use(express.bodyParser());

    function generateApk(req, res) {

    }

    app.use(function(req, res, next) {
        if ('/build' === req.path) {
            var post = req.body;
            console.log('I See a request...', typeof req.body);
            console.log(Object.keys(req.body));

            console.log(Object.keys(req.body.manifest));
            if (! post.manifest.url) throw new Error('missing url');
            generator.generate(post.manifest, post.zip, post.loadDir,
                function(err, zipFileLocation) {
                    res.set('Content-Type', 'application/json');
                    res.send({
                        status: "okay",
                        zipFileLocation: zipFileLocation
                    });
                });

        } else {
            console.log('Huh', req);
            next();
        }
    });

    console.log('listinging on ', config.generator_server_port);
    app.listen(config.generator_server_port,
        config.bind_address,
        function() {
            metrics.serverStarted('generator');
            log.info("generator running on " + config.bind_address + ":" +
                config.generator_server_port);
        });
});