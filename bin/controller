#!/usr/bin/env node

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

var path = require('path');
var url = require('url');

var express = require('express');
var toobusy = require('../lib/busy_middleware.js');

var _ = require('underscore');


var frontController = require('../lib/front_controller');
var log = require('../lib/logging').logger;
var metrics = require('../lib/metrics');

require('../lib/config')(function(config) {
  var app = express();
  app.use(toobusy);
  var appGenerator = function(req, res) {
    var start = new Date();
    var appGenFinish = function(err, apkLoc) {
      if (err) {
	res.type("text/plain");
	res.send(err.toString(), 400);
	metrics.generationApkFailed();
	return;
      }
      res.status(200);
      res.type("application/vnd.android.package-archive");
      res.sendfile(apkLoc);
      metrics.generationApkFinished(new Date() - start);
    };

    var manifestUrl = req.query.manifestUrl;
    var appType = req.query.appType || "hosted";

    if (!manifestUrl) {
      metrics.badManifestUrl();
      res.send("A manifestUrl param is needed", 400);
      return;
    }

    metrics.generateApkRequest(manifestUrl);
    frontController(manifestUrl, appType, config, appGenFinish);
  };

  app.get('/application.apk', appGenerator);

  var indexFile = function(req, res) {
    res.status(200);
    res.type("text/text");
    res.send("200 Server OK");
  };

  app.get("/", indexFile);

  app.get("/index.html", indexFile);

  app.listen(config.server_port, config.bind_address, function() {
    metrics.serverStarted();
    log.info("running on " + config.bind_address + ":" + config.server_port);
  });
});