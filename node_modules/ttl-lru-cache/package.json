{
  "author": {
    "name": "Paul Serby",
    "email": "paul@serby.net"
  },
  "name": "ttl-lru-cache",
  "description": "A fast in memory cache with TTL and LRU support",
  "version": "0.0.2",
  "tags": [
    "cache",
    "lru",
    "ttl"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:serby/ttl-lru-cache"
  },
  "main": "lib/cache.js",
  "scripts": {
    "test": "mocha -r should"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "dependencies": {
    "lodash": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "lru-cache": "*"
  },
  "readme": "# ttl-lru-cache - A fast in memory cache with TTL and LRU support\n\n[![build status](https://secure.travis-ci.org/serby/ttl-lru-cache.png)](http://travis-ci.org/serby/ttl-lru-cache)\n\n## Installation\n\n      npm install ttl-lru-cache\n\n## Usage\n\n```js\n\nvar cache = require('ttl-lru-cache')({ maxLength: 100 });\n\ncache.set('a', 'Hello');\n\nvar a = cache.get('a');\n\n// a = 'Hello'\n\n// TTL Example\ncache.set('b', 'Hello', 1000); // Add TTL in ms\nvar b = cache.get('b');\n// b = 'Hello'\n\nsetTimeout(function() {\n  var b = cache.get('b');\n// b = undefined\n}, 2000);\n\n```\n\n## Benchmark against lru-cache\n\n      npm install\n      make bench\n\n## Credits\n[Paul Serby](https://github.com/serby/) follow me on twitter [@serby](http://twitter.com/serby)\n\n## Licence\nLicenced under the [New BSD License](http://opensource.org/licenses/bsd-license.php)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/serby/ttl-lru-cache/issues"
  },
  "homepage": "https://github.com/serby/ttl-lru-cache",
  "_id": "ttl-lru-cache@0.0.2",
  "dist": {
    "shasum": "f0254c438bd7dda2af002be89febd2eaef2e1c2a"
  },
  "_from": "ttl-lru-cache@",
  "_resolved": "https://registry.npmjs.org/ttl-lru-cache/-/ttl-lru-cache-0.0.2.tgz"
}
